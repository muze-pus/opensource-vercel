name: Unit

on:
  push:
    branches:
    - main
    tags:
    - '!*'
  pull_request:

env:
  TURBO_REMOTE_ONLY: 'true'
  TURBO_TEAM: 'vercel'
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  test:
    name: Unit
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [14]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: '1.13.15'
      - uses: actions/checkout@v3
        with:
            fetch-depth: 2
      - uses: actions/setup-node@v3
        timeout-minutes: 5 # See https://github.com/actions/cache/issues/810
        with:
            node-version: ${{ matrix.node }}
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: yarn-${{ matrix.os }}-${{ matrix.node }}-${{ hashFiles('yarn.lock') }}
          restore-keys: yarn-${{ matrix.os }}-${{ matrix.node }}
      - run: yarn install --network-timeout 1000000 --frozen-lockfile
      - run: yarn run build
      - run: yarn run lint
        if: matrix.os == 'ubuntu-latest' && matrix.node == 14 # only run lint once
      - run: yarn run test-unit
      - run: yarn workspace vercel run coverage
        if: matrix.os == 'ubuntu-latest' && matrix.node == 14 # only run coverage once
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
