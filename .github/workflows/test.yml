name: Tests

on:
  push:
    branches:
    - main
    tags:
    - '!*'
  pull_request:

env:
  NODE_VERSION: '14'
  TURBO_REMOTE_ONLY: 'true'
  TURBO_TEAM: 'vercel'
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

jobs:
  setup:
    name: Find Changes
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps['set-tests'].outputs['tests'] }}
      dplUrl: ${{ steps.waitForTarball.outputs.url }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: actions/setup-go@v3
        with:
          go-version: '1.13.15'
      - uses: actions/setup-node@v3
        timeout-minutes: 5 # See https://github.com/actions/cache/issues/810
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
      - run: yarn install --network-timeout 1000000 --frozen-lockfile
      - id: set-tests
        run: |
          TESTS_ARRAY=$(node utils/chunk-tests.js $SCRIPT_NAME)
          echo "Files to test:"
          echo "$TESTS_ARRAY"
          echo "::set-output name=tests::$TESTS_ARRAY"
      - uses: patrickedqvist/wait-for-vercel-preview@ae34b392ef30297f2b672f9afb3c329bde9bd487
        id: waitForTarball
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          max_timeout: 360
          check_interval: 5

  test:
    timeout-minutes: 120
    runs-on: ${{ matrix.runner }}
    name: ${{matrix.scriptName}} (${{matrix.packageName}}, ${{matrix.chunkNumber}}, ${{ matrix.runner }})
    if: ${{ needs.setup.outputs['tests'] != '[]' }}
    needs:
      - setup
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.setup.outputs['tests']) }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: actions/setup-go@v3
        with:
          go-version: '1.13.15'
      - uses: actions/setup-node@v3
        timeout-minutes: 5 # See https://github.com/actions/cache/issues/810
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install Hugo
        if: matrix.runner == 'macos-latest'
        run: curl -L -O https://github.com/gohugoio/hugo/releases/download/v0.56.0/hugo_0.56.0_macOS-64bit.tar.gz && tar -xzf hugo_0.56.0_macOS-64bit.tar.gz && mv ./hugo packages/cli/test/dev/fixtures/08-hugo/

      - run: yarn install --network-timeout 1000000

      - name: Build ${{matrix.packageName}} and all its dependencies
        run: node_modules/.bin/turbo run build --cache-dir=".turbo" --scope=${{matrix.packageName}} --include-dependencies --no-deps
        env:
          FORCE_COLOR: '1'
      - name: Test ${{matrix.packageName}}
        run: node_modules/.bin/turbo run test --cache-dir=".turbo" --scope=${{matrix.packageName}} --no-deps -- ${{ join(matrix.testPaths, ' ') }}
        shell: bash
        env:
          VERCEL_CLI_VERSION: ${{ needs.setup.outputs.dplUrl }}/tarballs/vercel.tgz
          VERCEL_TEST_TOKEN: ${{ secrets.VERCEL_TEST_TOKEN }}
          VERCEL_TEST_REGISTRATION_URL: ${{ secrets.VERCEL_TEST_REGISTRATION_URL }}
          FORCE_COLOR: '1'

  conclusion:
    needs:
      - test
    runs-on: ubuntu-latest
    name: E2E
    steps:
      - name: Done
        run: echo "Done."
